@page "/ConsultaCategorias"

@inject IToastService Toast

<div class="card">

    <div class="card-header">
        <h3>Consulta de Categorias</h3>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="form-group col-4">
                <label>Filtro: </label>
                <select @bind="filtro" class="form-control  col-4" placeholder="Seleccione un Filtro">
                    <option value="0">Todo</option>
                    <option value="1">Id</option>
                    <option value="2">Descripcion</option>
                    <option value="3">Tipo</option>
                    
                </select>
            </div>

            <div class="form-group   col-6">
                <label>Criterio</label>
                <div class="input-group">
                    <input type="text" @bind=" criterio" class="form-control" />
                    <div class="input-group-append">
                        <button class="btn btn-primary" @onclick="Consultar">Consultar</button>
                    </div>
                </div>
            </div>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>CategoriaId</th>
                    <th>Descripcion</th>
                    <th>Tipo</th>
                    

                </tr>
            </thead>

            <tbody>
                @foreach (var item in lista)
                {
                    <tr>
                        <td>@item.CategoriaId</td>
                        <td>@item.Descripcion</td>
                        <td>@item.Tipo</td>
                    
                    </tr>
                }
            </tbody>
        </table>

    </div>

</div>

@code {

    public int filtro { get; set; }
    public string criterio { get; set; }
    public List<Categorias> lista = new List<Categorias>();


    private void Consultar()
    {
        try
        {
            switch (filtro)
            {
                case 0:
                    this.lista = CategoriasBLL.GetList(p => true);
                    break;
                case 1:
                    int ID = GetId();
                    this.lista = CategoriasBLL.GetList(p => p.CategoriaId == ID);

                    break;
                case 2:
                    this.lista = CategoriasBLL.GetList(p => p.Descripcion == criterio);

                    break;
                case 3:
                    int tipo = GetMonto();
                    this.lista = CategoriasBLL.GetList(p => p.Tipo == tipo);
                    break;
                
            }
        }
        catch (Exception)
        {

            throw;
        }
    }

    private int GetId()
    {
        int resultado = 0;

        try
        {
            resultado = Convert.ToInt32(criterio);
            return resultado;
        }
        catch (Exception)
        {

            Toast.ShowError("El Id debe ser numerico..");
        }

        return resultado;
    }

     private int GetMonto()
    {
        int tipo = 0;

        try
        {
            tipo = Convert.ToInt32(criterio);
            return tipo;
        }
        catch (Exception)
        {

            Toast.ShowError("El monto debe ser numerico..");
        }

        return tipo;
    }
}

